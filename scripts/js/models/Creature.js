// Generated by CoffeeScript 1.4.0
(function() {

  define(["models/Entity", "models/Heightmap", "Machine", "Backbone"], function(EntityModel, heightmapModel) {
    var Creature;
    return Creature = EntityModel.extend({
      defaults: {
        path: []
      },
      initialize: function() {
        var machine,
          _this = this;
        machine = new Machine;
        this.set("direction", "south");
        this.set("state", machine.generateTree(this.behaviorTree, this, this.states));
        return this.listenTo(this, "tick", function() {
          return _this.set("state", _this.get("state").tick());
        });
      },
      behaviorTree: {
        identifier: "sleep",
        strategy: "prioritised",
        children: [
          {
            identifier: "walk"
          }
        ]
      },
      states: {
        sleep: function() {},
        canSleep: function() {
          return !this.get("path").length;
        },
        walk: function() {
          var direction, nearRoad, path;
          path = this.get("path");
          nearRoad = path.shift();
          this.set("path", path);
          if (!nearRoad.length) {
            return;
          }
          this.trigger("step", nearRoad);
          this.set({
            "x": this.get("x") + nearRoad[0],
            "y": this.get("y") + nearRoad[1]
          });
          direction = "south";
          if (nearRoad[0] === 1) {
            direction = "east";
          }
          if (nearRoad[0] === -1) {
            direction = "west";
          }
          if (nearRoad[1] === 1) {
            direction = "south";
          }
          if (nearRoad[1] === -1) {
            direction = "north";
          }
          return this.set("direction", direction);
        },
        canWalk: function() {
          return !!this.get("path").length;
        }
      }
    });
  });

}).call(this);
